{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _deviceQuerry = _interopRequireDefault(require(\"./deviceQuerry\"));\n\nvar _arrayKeyMapToObject = _interopRequireDefault(require(\"./arrayKeyMapToObject\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar findBorder = function findBorder(border, borderColor, themeColors) {\n  if (!border) {\n    return;\n  }\n\n  var property = \"border\";\n  var style = [];\n\n  if (typeof (border.x || border.y || border.b || border.t || border.l || border.r) === \"undefined\") {\n    style.push(makeResponsiveBorder(border, property, themeColors, borderColor));\n  } else {\n    // If x direction exist\n    if (border.x != \"undefined\") {\n      style.push(makeResponsiveBorder(border.x, \"\".concat(property, \"-left\"), themeColors, borderColor));\n      style.push(makeResponsiveBorder(border.x, \"\".concat(property, \"-right\"), themeColors, borderColor));\n    } // If y direction exist\n\n\n    if (border.y != \"undefined\") {\n      style.push(makeResponsiveBorder(border.y, \"\".concat(property, \"-top\"), themeColors, borderColor));\n      style.push(makeResponsiveBorder(border.y, \"\".concat(property, \"-bottom\"), themeColors, borderColor));\n    } // If t direction exist\n\n\n    if (border.t != \"undefined\") {\n      style.push(makeResponsiveBorder(border.t, \"\".concat(property, \"-top\"), themeColors, borderColor));\n    } // If l direction exist\n\n\n    if (border.l != \"undefined\") {\n      style.push(makeResponsiveBorder(border.l, \"\".concat(property, \"-left\"), themeColors, borderColor));\n    } // If r direction exist\n\n\n    if (border.r != \"undefined\") {\n      style.push(makeResponsiveBorder(border.r, \"\".concat(property, \"-right\"), themeColors, borderColor));\n    } // If b direction exist\n\n\n    if (border.b != \"undefined\") {\n      style.push(makeResponsiveBorder(border.b, \"\".concat(property, \"-bottom\"), themeColors, borderColor));\n    }\n  }\n\n  return (0, _arrayKeyMapToObject[\"default\"])(style);\n};\n\nvar _default = findBorder;\nexports[\"default\"] = _default;\n\nvar makeResponsiveBorder = function makeResponsiveBorder(border, property, themeColors, borderColor) {\n  var style = {};\n\n  if (!border) {\n    return;\n  }\n\n  var defaultborderColor = typeof borderColor === \"string\" && borderColor && (themeColors[borderColor] || borderColor) || borderColor && borderColor.xs && (themeColors[borderColor.xs] || borderColor.xs) || \"#000000\"; // Give style directly if not an object\n\n  if (typeof border === \"string\") {\n    if (border === \"none\") {\n      style[property] = border;\n    } else {\n      style[property] = \"\".concat(border, \" \").concat(themeColors[borderColor] || borderColor || defaultborderColor);\n    }\n  } // Create an array for responsive border\n  else if (_typeof(border) === \"object\") {\n      Object.keys(border).map(function (key) {\n        if (key === \"xs\") {\n          if (border[key] === \"none\") {\n            style[property] = border[key];\n          } else {\n            style[property] = \"\".concat(border[key], \" \").concat(themeColors[borderColor[key]] || borderColor[key] || defaultborderColor);\n          }\n        } else {\n          if (border[key] === \"none\") {\n            style[_deviceQuerry[\"default\"][key]] = _defineProperty({}, property, border[key]);\n          } else {\n            style[_deviceQuerry[\"default\"][key]] = _defineProperty({}, property, \"\".concat(border[key], \" \").concat(themeColors[borderColor[key]] || borderColor[key] || defaultborderColor));\n          }\n        }\n      });\n    }\n\n  return style;\n};","map":null,"metadata":{},"sourceType":"script"}